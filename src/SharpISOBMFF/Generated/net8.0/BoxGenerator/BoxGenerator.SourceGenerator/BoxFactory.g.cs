using System;
using System.Linq;
using System.Collections.Generic;

namespace SharpISOBMFF
{
    public class BoxFactory
    {
        public static Func<string, string, byte[], Box> CreateBox = DefaultCreateBox;
        public static Func<string, SampleGroupDescriptionEntry> CreateEntry = DefaultCreateEntry;
        public static Func<byte, Descriptor> CreateDescriptor = DefaultCreateDescriptor;

        public static Box DefaultCreateBox(string fourCC, string parent, byte[] uuid = null)
        {
            if (uuid != null) fourCC = $"{fourCC} {Convert.ToHexString(uuid).ToLowerInvariant()}";

            switch(fourCC)
            {
               case "----":  return new CustomBox();
               case ".mp3": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC(".mp3"));break;
               case "@day":  return new RicohAppleRecordingYear2Box();
               case "@mak":  return new RicohAppleMakBox();
               case "@mod":  return new RicohAppleCameraModelBox();
               case "@ppi":  return new ParentProductIDBox();
               case "@PRM":  return new AdobePremiereVersionBox();
               case "@PRQ":  return new AdobePremiereQuickTimeVersionBox();
               case "@PST":  return new ParentShortTitleBox();
               case "@pti":  return new ParentTitleBox();
               case "@sec":  return new SamsungSecBox();
               case "@sti":  return new ShortTitleBox();
               case "@swr":  return new RicohAppleSoftwareBox();
               case "@xyz":  return new RicohAppleGPSCoordinatesBox();
               case "\0\0\0\0":  return new TerminatorBox();
               case "\x6D\x73\x00\x02": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("\x6D\x73\x00\x02"));break;
               case "\x6D\x73\x00\x11": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("\x6D\x73\x00\x11"));break;
               case "\x6D\x73\x00\x55": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("\x6D\x73\x00\x55"));break;
               case "_cx_":  return new CxBox();
               case "_cy_":  return new CyBox();
               case "_htc":  return new HTCInfoBox();
               case "_yaw":  return new YawBox();
               case "©alb":  return new AppleAlbumBox();
               case "©ard":  return new AppleArtDirectorBox();
               case "©arg":  return new AppleArgBox();
               case "©ark":  return new AppleArkBox();
               case "©art":  return new AppleArtist3Box();
               case "©ART":  return new AppleArtistBox();
               case "©aut":  return new AppleAuthorBox();
               case "©cmt":  return new AppleCommentBox();
               case "©cok":  return new AppleCokBox();
               case "©com":  return new AppleComBox();
               case "©con":  return new AppleConductorBox();
               case "©cpy":  return new AppleCopyright2Box();
               case "©day":  return new AppleRecordingYear2Box();
               case "©des":  return new AppleDescriptionBox();
               case "©dir":  return new AppleDirBox();
               case "©ed1":  return new AppleEd1Box();
               case "©ed2":  return new AppleEd2Box();
               case "©ed3":  return new AppleEd3Box();
               case "©ed4":  return new AppleEd4Box();
               case "©ed5":  return new AppleEd5Box();
               case "©ed6":  return new AppleEd6Box();
               case "©ed7":  return new AppleEd7Box();
               case "©ed8":  return new AppleEd8Box();
               case "©ed9":  return new AppleEd9Box();
               case "©enc":  return new AppleEncoderNameBox();
               case "©fmt":  return new AppleFmtBox();
               case "©fpt":  return new ApplePitchBox();
               case "©frl":  return new AppleRollBox();
               case "©fyw":  return new AppleYawBox();
               case "©gen":  return new AppleGenreBox();
               case "©gpt":  return new AppleCameraPitchBox();
               case "©grl":  return new AppleCameraRollBox();
               case "©grp":  return new AppleGroupingBox();
               case "©gyw":  return new AppleCameraYawBox();
               case "©hst":  return new AppleHostComputerBox();
               case "©inf":  return new AppleInfBox();
               case "©isr":  return new AppleIsrBox();
               case "©lab":  return new AppleLabBox();
               case "©lal":  return new AppleLalBox();
               case "©lyr":  return new AppleLyricsBox();
               case "©mak":  return new AppleMakBox();
               case "©mal":  return new AppleMakerUrlBox();
               case "©mdl":  return new AppleModelBox();
               case "©mod":  return new AppleCameraModelBox();
               case "©mvc":  return new AppleMovementCountBox();
               case "©mvi":  return new AppleMovementNumberBox();
               case "©mvn":  return new AppleMovementNameBox();
               case "©nak":  return new AppleNakBox();
               case "©nam":  return new AppleNameBox();
               case "©nrt":  return new AppleNarratorBox();
               case "©ope":  return new AppleComposerBox();
               case "©pdk":  return new ApplePdkBox();
               case "©phg":  return new ApplePhgBox();
               case "©prd":  return new AppleProducerBox();
               case "©PRD":  return new AppleProductBox();
               case "©prf":  return new ApplePrfBox();
               case "©prk":  return new ApplePrkBox();
               case "©prl":  return new ApplePrlBox();
               case "©pub":  return new ApplePublisherBox();
               case "©req":  return new AppleRequirementsBox();
               case "©sne":  return new AppleSoundEngineerBox();
               case "©snk":  return new AppleSnkBox();
               case "©snm":  return new AppleSnmBox();
               case "©sol":  return new AppleSoloistBox();
               case "©src":  return new AppleSrcBox();
               case "©st3":  return new AppleSubtitleBox();
               case "©swf":  return new AppleCreatorBox();
               case "©swk":  return new AppleSwkBox();
               case "©swr":  return new AppleSoftwareBox();
               case "©TIM":  return new AppleStartTimecode();
               case "©too":  return new AppleEncoderToolBox();
               case "©trk":  return new AppleTrackBox();
               case "©TSC":  return new AppleStartTimeScale();
               case "©TSZ":  return new AppleStartTimeSampleSize();
               case "©url":  return new AppleUrlBox();
               case "©wrk":  return new AppleWorkBox();
               case "©wrn":  return new AppleWarningBox();
               case "©wrt":  return new AppleComposersBox();
               case "©xpd":  return new AppleExecutiveProducerBox();
               case "©xsp":  return new AppleSpeedXBox();
               case "©xyz":  return new AppleGPSCoordinatesBox();
               case "©ysp":  return new AppleSpeedYBox();
               case "©zsp":  return new AppleSpeedZBox();
               case "0000":  return new ZeroBox();
               case "2vuY": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("2vuY"));break;
               case "3dpr":  return new MVDDepthResolutionBox();
               case "3sib":  return new MVDScalabilityInformationSEIBox();
               case "a1lx":  return new AV1LayeredImageIndexingProperty();
               case "a1op":  return new OperatingPointSelectorProperty();
               case "a3d1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("a3d1"));break;
               case "a3d2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("a3d2"));break;
               case "a3d3": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("a3d3"));break;
               case "a3d4": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("a3d4"));break;
               case "a3dC":  return new A3DConfigurationBox();
               case "aART":  return new AppleArtist2Box();
               case "ac-3": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("ac-3"));break;
               case "acgl":  return new SubpicCommonGroupBox();
               case "ainf":  return new AssetInformationBox();
               case "akID":  return new ITunesAccountTypeBox();
               case "alac": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("alac"));break;
               case "alaw": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("alaw"));break;
               case "albm":  return new ThreeGPPAlbumBox();
               case "albr":  return new AlbumArtistBox();
               case "alis":  return new AppleDataReferenceAliasBox();
               case "AllF":  return new PlayAllFramesBox();
               case "alou":  return new AlbumLoudnessInfo();
               case "alte":  return new AlteTrackGroupTypeBox();
               case "altr":  return new AlternativesEntityGroupBox();
               case "altt":  return new AccessibilityTextProperty();
               case "amf0":  return new Amf0Box();
               case "amgl":  return new SubpicMultipleGroupsBox();
               case "amve":  return new AmbientViewingEnvironmentBox();
               case "angl":  return new CameraAngleBox();
               case "apcn": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("apcn"));break;
               case "apID":  return new ITunesPurchaseAccountBox();
               case "apmd":  return new AppleApertureModeBox();
               case "APRF":  return new PspAprfBox();
               case "ardt":  return new ARDroneFileBox();
               case "assp":  return new AlternativeStartupSequencePropertiesBox();
               case "atID":  return new AppleAtIDBox();
               case "auth":  return new ThreeGPPAuthorBox();
               case "auxC":  return new AuxiliaryTypeProperty();
               case "auxi":  return new AuxiliaryTypeInfoBox();
               case "auxl":  return new AuxiliaryImageReferenceBox();
               case "av01": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("av01"));break;
               case "av1C":  return new AV1CodecConfigurationBox();
               case "avc1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("avc1"));break;
               case "avc2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("avc2"));break;
               case "avc3": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("avc3"));break;
               case "avc4": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("avc4"));break;
               case "avcC":  return new AVCConfigurationBox();
               case "avcn":  return new AvcNalUnitStorageBox();
               case "avcp": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("avcp"));break;
               case "blin":  return new StereoCameraSystemBaselineBox();
               case "bloc":  return new BaseLocationBox();
               case "brnd":  return new BrandProperty();
               case "btec":  return new GlamourSettingsBox();
               case "btrt":  return new BitRateBox();
               case "buff":  return new BufferingBox();
               case "bxml":  return new BinaryXMLBox();
               case "c608":  return new C608Box();
               case "CAME":  return new CameraFirmwareBox();
               case "cams":  return new StereoCameraSystemBox();
               case "catg":  return new CategoryBox();
               case "cbmp":  return new CubemapProjection();
               case "ccid":  return new OMAContentIDBox();
               case "cclv":  return new ContentColourVolumeBox();
               case "ccst":  return new CodingConstraintsBox();
               case "cdef":  return new J2kChannelDefinitionBox();
               case "CDI1":  return new CanonCDI1TagsBox();
               case "cdis":  return new ContentDistributorIDBox();
               case "cdsc":  return new TrackReferenceTypeBox(IsoStream.FromFourCC("cdsc"));
               case "cert":  return new CertificateBox();
               case "chan":  return new AudioChannelLayoutBox();
               case "chap":  return new AppleChapterListBox();
               case "chnl":  return new ChannelLayout();
               case "chpl":  return new AdobeChapterBox();
               case "cinf":  return new CompleteTrackInfoBox();
               case "clap":  return new CleanApertureBox();
               case "clcp":  return new ClosedCaptionTrackBox();
               case "clef":  return new AppleCleanApertureDimensionsBox();
               case "clfn":  return new ClfnBox();
               case "clid":  return new ClipIDBox();
               case "clip":  return new AppleClippingBox();
               case "clli":  return new ContentLightLevelBox();
               case "clsf":  return new ThreeGPPClassificationBox();
               case "cmap":  return new J2kComponentMappingBox();
               case "cmex":  return new CameraExtrinsicMatrixBox();
               case "cmfy":  return new StereoComfortBox();
               case "cmID":  return new CmIDBox();
               case "cmin":  return new CameraIntrinsicMatrixBox();
               case "cmnm":  return new ModelBox();
               case "cmov":  return new AppleCompressedMoovBox();
               case "CMP1":  return new CanonCMP1TagsBox();
               case "cmpC":  return new GenericCompressionConfigurationBox();
               case "cmpd":  return new ComponentDefinitionBox();
               case "cmvd":  return new AppleCompressedMoovDataBox();
               case "CNCV":  return new CanonCompressorVersionBox();
               case "CNFV":  return new CanonFirmwareVersionBox();
               case "cnID":  return new AppleStoreCatalogIDBox();
               case "CNMN":  return new CanonModelBox();
               case "CNOP":  return new CanonCNOPBox();
               case "CNTH":  return new CanonCNTHBox();
               case "co64":  return new ChunkLargeOffsetBox();
               case "coll":  return new CollectionNameBox();
               case "CoLL":  return new ContentLightLevelBoxCoLLDup(); // TODO: fix duplicate
               case "colr":  return new ColourInformationBox();
               case "corg":  return new CameraSystemOriginSourceBox();
               case "covr":  return new AppleCoverArtBox();
               case "cpat":  return new ComponentPatternDefinitionBox();
               case "cpil":  return new AppleCompilationBox();
               case "cprt": if(parent == "ilst") return new AppleCopyrightBox(); else return new CopyrightBox();
               case "crgn":  return new AppleClippingRegionBox();
               case "crtt":  return new CreationTimeProperty();
               case "csch":  return new CompatibleSchemeTypeBox();
               case "csgp":  return new CompactSampleToGroupBox();
               case "cslg":  return new CompositionToDecodeBox();
               case "cstg":  return new CstgTrackGroupTypeBox();
               case "ctab":  return new AppleColorTableBox();
               case "ctim":  return new CueTimeBox();
               case "ctps":  return new AppleCtpsBox();
               case "ctrm":  return new VideoContourMapBox();
               case "ctrs":  return new VideoContourCollectionBox();
               case "ctry":  return new AppleCountryListBox();
               case "ctts":  return new CompositionOffsetBox();
               case "ctyp":  return new ControllerTypeBox();
               case "cust":  return new CustomInfoBox();
               case "cver":  return new CodeVersionBox();
               case "cvid": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("cvid"));break;
               case "cvru":  return new OMACoverURLBox();
               case "cxfm":  return new CameraSystemTransformBox();
               case "d263":  return new H263SpecificBox();
               case "dac3":  return new AC3SpecificBox();
               case "dadj":  return new StereoComfortDisparityAdjustmentBox();
               case "damr":  return new AmrSpecificBox();
               case "data":  return new DataBox();
               case "date":  return new DateTimeOriginalBox();
               case "DcMD":  return new KodakDcMDBox();
               case "dcom":  return new AppleDecompressorBox();
               case "ddts":  return new DTSSpecificBox();
               case "dec3":  return new EC3SpecificBox();
               case "desc":  return new AppleDescriptionBoxdescDup(); // TODO: fix duplicate
               case "devc":  return new EVRCSpecificBox();
               case "dfxp":  return new DfxpSampleEntry();
               case "dhec":  return new DefaultHevcExtractorConstructorBox();
               case "dimg":  return new SingleItemTypeReferenceBox(IsoStream.FromFourCC("dimg"));
               case "dimm":  return new hintimmediateBytesSent();
               case "dinf":  return new DataInformationBox();
               case "disk":  return new DiskNumberBox();
               case "dmax":  return new HintLongestPacket();
               case "dmed":  return new hintmediaBytesSent();
               case "dmix":  return new DownMixInstructions();
               case "dmlp":  return new MLPSpecificBox();
               case "dOps":  return new OpusSpecificBox();
               case "dpnd":  return new DpndBox();
               case "dqcp":  return new QCELPSpecificBox();
               case "dref":  return new DataReferenceBox();
               case "drep":  return new hintrepeatedBytesSent();
               case "drmi": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("drmi"));break;
               case "drms": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("drms"));break;
               case "dscp":  return new ThreeGPPDescriptionBox();
               case "dsmv":  return new SMVSpecificBox();
               case "dtsc": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("dtsc"));break;
               case "dtse": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("dtse"));break;
               case "dtsh": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("dtsh"));break;
               case "dtsl": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("dtsl"));break;
               case "dtyp":  return new MetaDatatypeDefinitionBox();
               case "dvav": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("dvav"));break;
               case "dvc ": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("dvc "));break;
               case "dvca": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("dvca"));break;
               case "dvcC":  return new DoViConfigurationBox();
               case "dvcp": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("dvcp"));break;
               case "dvhe": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("dvhe"));break;
               case "ec-3": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("ec-3"));break;
               case "ecam":  return new ExtrinsicCameraParametersBox();
               case "edts":  return new EditBox();
               case "egid":  return new EpisodeGlobalUniqueIdBox();
               case "elng":  return new ExtendedLanguageBox();
               case "elst":  return new EditListBox();
               case "emsg":  return new EventMessageBox();
               case "enca": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("enca"));break;
               case "enct":  return new TextSampleEntry();
               case "encv": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("encv"));break;
               case "enda":  return new AppleEndiannessBox();
               case "enof":  return new AppleEncodedPixelsDimensionsBox();
               case "equi":  return new EquirectangularProjection();
               case "esds":  return new ESDBox();
               case "etyp":  return new ExtendedTypeBox();
               case "evc1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("evc1"));break;
               case "evcC":  return new EVCConfigurationBox();
               case "evs1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("evs1"));break;
               case "evs2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("evs2"));break;
               case "evsC":  return new EVCSliceComponentTrackConfigurationBox();
               case "exte":  return new MetaDataExtensionsBox();
               case "eyes":  return new StereoViewBox();
               case "fade":  return new FadeTransitionEffectProperty();
               case "fall":  return new AlternateFormatTrackBox();
               case "fdp ":  return new FDHintSampleEntry();
               case "fecr":  return new FECReservoirBox();
               case "FFMV":  return new FujiFilmFFMVBox();
               case "fiel":  return new FielBox();
               case "fiin":  return new FDItemInformationBox();
               case "finm":  return new OriginalFileNameBox();
               case "fire":  return new FileReservoirBox();
               case "FIRM":  return new FirmwareBox();
               case "fish":  return new FisheyeProjectionBox();
               case "fl32": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("fl32"));break;
               case "fl64": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("fl64"));break;
               case "flvr":  return new AppleFlvrBox();
               case "folw":  return new SubtitleTrackBox();
               case "forc":  return new ForcedSubtitleTrackBox();
               case "FOV\0":  return new FieldOfViewBox();
               case "fpar":  return new FilePartitionBox();
               case "fpcm":  return new FpcmBox();
               case "FPRF":  return new PspFprfBox();
               case "frea":  return new KodakFreaBox();
               case "free":  return new FreeSpaceBox();
               case "frma":  return new OriginalFormatBox();
               case "fsid":  return new OriginalFilePathBox();
               case "ftab":  return new FontTableBox();
               case "ftyp":  return new FileTypeBox();
               case "gama":  return new GammaBox();
               case "gdat":  return new GPSDataBox();
               case "geID":  return new AppleGeIDBox();
               case "gif ": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("gif "));break;
               case "gitn":  return new GroupIdToNameBox();
               case "gmhd":  return new GenericMediaHeaderAtom();
               case "gmin":  return new BaseMediaInfoAtom();
               case "gnre":  return new GenreBox();
               case "GoPr":  return new GoProTypeBox();
               case "GPMF":  return new GoProGPMFBox();
               case "gps ":  return new GpsBox();
               case "GPS ":  return new GPSDataList2Box();
               case "gps0":  return new GPSTrackBox();
               case "grpl":  return new GroupsListBox();
               case "grup":  return new GroupingBox();
               case "gsen":  return new GSensorBox();
               case "gshh":  return new GooglesHostHeaderBox();
               case "gspm":  return new GooglePingMessageBox();
               case "gspu":  return new GooglePingUrlBox();
               case "gssd":  return new GoogleSourceDataBox();
               case "gsst":  return new GoogleStartTimeBox();
               case "gstd":  return new GoogleTrackDurationBox();
               case "GUID":  return new GUIDBox();
               case "h263": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("h263"));break;
               case "hdlr":  return new HandlerBox();
               case "hdvd":  return new HdvdBox();
               case "hequ":  return new HalfEquirectangularProjectionBox();
               case "hero":  return new HeroStereoEyeDescriptionBox();
               case "hev1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hev1"));break;
               case "hev2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hev2"));break;
               case "hev3": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hev3"));break;
               case "hfov":  return new HorizontalFieldOfViewBox();
               case "hind":  return new TrackReferenceTypeBoxhindDup(); // TODO: fix duplicate
               case "hinf":  return new HintStatisticsBox();
               case "hint":  return new HintBox();
               case "hinv":  return new AppleHintVersionBox();
               case "hmhd":  return new HintMediaHeaderBox();
               case "hnti": return new TrackHintInformation(); // TODO: box is ambiguous in between TrackHintInformation and MovieHintInformation
               case "href":  return new HrefBox();
               case "htcb":  return new HTCBinaryBox();
               case "htka":  return new HTCTrackBox();
               case "hvc1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hvc1"));break;
               case "hvc2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hvc2"));break;
               case "hvc3": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hvc3"));break;
               case "hvcC":  return new HEVCConfigurationBox();
               case "hvt1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hvt1"));break;
               case "hvt2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hvt2"));break;
               case "hvt3": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("hvt3"));break;
               case "hvtC":  return new HEVCTileConfigurationBox();
               case "icam":  return new IntrinsicCameraParametersBox();
               case "icef":  return new GenericCompressedUnitsItemInfoBox();
               case "icnu":  return new OMAIconURLBox();
               case "icpv": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("icpv"));break;
               case "ID32":  return new ID3TagBox();
               case "idat":  return new ItemDataBox();
               case "iden":  return new CueIDBox();
               case "IDIT":  return new DateTimeOriginal2Box();
               case "idsc":  return new AppleImageDescriptionBox();
               case "ienc":  return new ItemEncryptionBox();
               case "iicc":  return new AppleICCProfileBox();
               case "iinf":  return new ItemInfoBox();
               case "iloc":  return new ItemLocationBox();
               case "ilst":  return new AppleItemListBox();
               case "ima4": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("ima4"));break;
               case "imda":  return new IdentifiedMediaDataBox();
               case "imdt":  return new DataEntryImdaBox();
               case "imgt":  return new ImageTrackReferenceBox();
               case "imif":  return new IPMPInfoBox();
               case "imir":  return new ImageMirror();
               case "in24": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("in24"));break;
               case "in32": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("in32"));break;
               case "infe":  return new ItemInfoEntry();
               case "infi":  return new CameraInfoBox();
               case "INFO":  return new SamsungINFOBox();
               case "infu":  return new OMAInfoURLBox();
               case "inst":  return new Insta360InfoBox();
               case "iods":  return new AppleInitialObjectDescriptorBox();
               case "ipcm":  return new IpcmBox();
               case "ipco":  return new ItemPropertyContainerBox();
               case "ipir":  return new IpirBox();
               case "ipma":  return new ItemPropertyAssociationBox();
               case "ipmc":  return new IPMPControlBox();
               case "ipro":  return new ItemProtectionBox();
               case "iprp":  return new ItemPropertiesBox();
               case "iref":  return new ItemReferenceBox();
               case "iroi":  return new IroiInfoBox();
               case "irot":  return new ImageRotation();
               case "iscl":  return new ImageScaling();
               case "ispe":  return new ImageSpatialExtentsProperty();
               case "itai":  return new ItaiBox();
               case "itnu":  return new ITunesUBox();
               case "iviv":  return new FairPlayIvBox();
               case "j2kH":  return new J2kHBox();
               case "j2ki": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("j2ki"));break;
               case "j2kL":  return new J2kLayersBox();
               case "jpeg": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("jpeg"));break;
               case "JPEG":  return new JPEGInfoBox();
               case "jpgC":  return new JPEGConfigurationBox();
               case "junk":  return new AppleJunkBox();
               case "key ":  return new FairPlayUserKeyBox();
               case "keyd":  return new MetaDataKeyDeclarationBox();
               case "keyi":  return new MetaDataInlineKeysPresentBox();
               case "keys":  return new MetaDataKeyTableBox();
               case "keyw":  return new AppleKeywordBox();
               case "kgtt":  return new AppleTrackTypeBox();
               case "kind":  return new KindBox();
               case "kmat":  return new AppleCompressedMatteBox();
               case "kpcd": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("kpcd"));break;
               case "kywd":  return new ThreeGPPKeywordsBox();
               case "ldep":  return new TierDependencyBox();
               case "ldes":  return new AppleLongDescriptionBox();
               case "ldst":  return new CameraSystemLensDistortionsBox();
               case "LEIC":  return new LeicaLEICBox();
               case "lens":  return new CameraSystemLensBox();
               case "LENS":  return new LensSerialNumberBox();
               case "leva":  return new LevelAssignmentBox();
               case "lfad":  return new CameraSystemLensFrameAdjustmentBox();
               case "lhe1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("lhe1"));break;
               case "lht1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("lht1"));break;
               case "lhv1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("lhv1"));break;
               case "lhvC":  return new LHEVCConfigurationBox();
               case "lnex":  return new CameraSystemLensExtrinsicsBox();
               case "lnhd":  return new CameraSystemLensHeaderBox();
               case "lnin":  return new CameraSystemLensIntrinsicsBox();
               case "lnsc":  return new CameraSystemLensCollectionBox();
               case "load":  return new LoadBox();
               case "loca":  return new MetaDataLocaleBox();
               case "loci":  return new ThreeGPPLocationInformationBox();
               case "LOOP":  return new AppleLoopingBox();
               case "lpcm": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("lpcm"));break;
               case "lrcu":  return new OMALyricsURLBox();
               case "lsel":  return new LayerSelectorProperty();
               case "ludt":  return new LoudnessBox();
               case "Lvlm":  return new LevelMeterBox();
               case "m4ds":  return new MPEG4ExtensionDescriptorsBox();
               case "MAC3": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("MAC3"));break;
               case "MAC6": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("MAC6"));break;
               case "manu":  return new MakeBox();
               case "matt":  return new AppleTrackMatteBox();
               case "maxr":  return new HintMaxRate();
               case "MCPS":  return new MediaCleanerProBox();
               case "mcvr":  return new PreviewImageBox();
               case "md5i":  return new MD5IntegrityBox();
               case "mdat":  return new MediaDataBox();
               case "mdcv":  return new MasteringDisplayColourVolumeBox();
               case "mdft":  return new ModificationTimeProperty();
               case "mdhd":  return new MediaHeaderBox();
               case "mdia":  return new MediaBox();
               case "mdri":  return new OMAMutableDRMBox();
               case "mdta":  return new MdtaBox();
               case "mean":  return new ITunesMetadataMeanBox();
               case "mebx":  return new BoxedMetaDataSampleEntry();
               case "meco":  return new AdditionalMetadataContainerBox();
               case "mehd":  return new MovieExtendsHeaderBox();
               case "mere":  return new MetaBoxRelationBox();
               case "mesh":  return new MeshBox();
               case "meta":  return new MetaBox();
               case "mett":  return new TextMetaDataSampleEntry();
               case "metx":  return new XMLMetaDataSampleEntry();
               case "mfhd":  return new MovieFragmentHeaderBox();
               case "mfra":  return new MovieFragmentRandomAccessBox();
               case "mfro":  return new MovieFragmentRandomAccessOffsetBox();
               case "minf":  return new MediaInformationBox();
               case "mini":  return new MiniBox();
               case "mjpa": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mjpa"));break;
               case "mjpb": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mjpb"));break;
               case "mjpg": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mjpg"));break;
               case "mlpa": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("mlpa"));break;
               case "MMA0":  return new MinoltaMMA0Box();
               case "MMA1":  return new MinoltaMMA1Box();
               case "moat":  return new MoatBox();
               case "modl":  return new ModelBoxmodlDup(); // TODO: fix duplicate
               case "moof": return new MovieFragmentBox(); // TODO: box is ambiguous in between MovieFragmentBox and CompressedMovieFragmentBox
               case "moov": return new MovieBox(); // TODO: box is ambiguous in between MovieBox and CompressedMovieBox
               case "mp4a": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("mp4a"));else return new Mp4aBox();break;
               case "mp4s": if(parent == "stsd")  return new MpegSampleEntry();break;
               case "mp4v": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mp4v"));break;
               case "mpod":  return new MpodBox();
               case "mpvd":  return new MotionPhotoVideoBox();
               case "mrld":  return new MarlinDictionaryBox();
               case "mrlh":  return new MarlinHeaderBox();
               case "mrlv":  return new MarlinValuesBox();
               case "mshp":  return new MeshProjection();
               case "mskC":  return new MaskConfigurationProperty();
               case "mstv":  return new MVCSubTrackViewBox();
               case "MTDT":  return new PspMtdtBox();
               case "MUID":  return new MediaUIDBox();
               case "must":  return new RequiredBoxTypesBox();
               case "mvc1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mvc1"));break;
               case "mvc2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mvc2"));break;
               case "mvc3": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mvc3"));break;
               case "mvc4": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mvc4"));break;
               case "mvcC":  return new MVCConfigurationBox();
               case "mvcg":  return new MultiviewGroupBox();
               case "mvci":  return new MultiviewInformationBox();
               case "mvcP":  return new MVCViewPriorityAssignmentBox();
               case "mvd1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mvd1"));break;
               case "mvd2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mvd2"));break;
               case "mvd3": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mvd3"));break;
               case "mvd4": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("mvd4"));break;
               case "mvdC":  return new MVCDConfigurationBox();
               case "mvex":  return new MovieExtendsBox();
               case "mvhd":  return new MovieHeaderBox();
               case "mvra":  return new MultiviewRelationAttributeBox();
               case "MVTG":  return new FujiFilmMVTGBox();
               case "nail":  return new ThumbnailTIFFBox();
               case "name": return new AppleName2Box(); // TODO: box is ambiguous in between AppleName2Box and FairPlayUserNameBox
               case "nbmt":  return new NextbaseMetaBox();
               case "NCDB":  return new NikonNCDBBox();
               case "NCDT":  return new NikonNCDTBox();
               case "NCHD":  return new NikonMakerNoteVersionBox();
               case "NCM1":  return new NikonCameraPreviewImage1Box();
               case "NCM2":  return new NikonCameraPreviewImage2Box();
               case "NCTG":  return new NikonExifBox();
               case "NCTH":  return new NikonCameraThumbnailImageBox();
               case "NCVW":  return new NikonCameraPreviewImageBox();
               case "nmhd":  return new NullMediaHeaderBox();
               case "NONE": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("NONE"));break;
               case "npck":  return new hintPacketsSentnpckDup(); // TODO: fix duplicate
               case "nsav":  return new AppleNoSaveBox();
               case "nump":  return new hintPacketsSent();
               case "odaf":  return new OMAAccessUnitFormatBox();
               case "odda":  return new OMAContentObjectBox();
               case "odhe":  return new OMADiscreteMediaHeadersBox();
               case "odkm":  return new OMAKeyManagementBox();
               case "odrb":  return new OMARightsObjectBox();
               case "odrm":  return new OMADrmContainerBox();
               case "odtt":  return new OMATransactionTrackingBox();
               case "ohdr":  return new OMACommonHeadersBox();
               case "oinf":  return new OperatingPointsInformationProperty();
               case "OLYM":  return new OlympusOLYMBox();
               case "opeg":  return new OperatingPointGroupBox();
               case "Opus": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("Opus"));break;
               case "orie":  return new OrieBox();
               case "otyp":  return new OriginalFileTypeBox();
               case "ovc1":  return new Ovc1VisualSampleEntryImpl();
               case "owma": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("owma"));break;
               case "pack":  return new ViewPackingBox();
               case "padb":  return new PaddingBitsBox();
               case "pads":  return new PadsBox();
               case "paen":  return new PartitionEntry();
               case "PANA":  return new PanasonicPANABox();
               case "pasp":  return new PixelAspectRatioBox();
               case "payl":  return new CuePayloadBox();
               case "payt":  return new HintPayloadID();
               case "pclr":  return new J2kPaletteBox();
               case "pcmC":  return new PcmCBox();
               case "pcst":  return new PodcastBox();
               case "pdin":  return new ProgressiveDownloadInfoBox();
               case "PENT":  return new PentaxPENTBox();
               case "perf":  return new ThreeGPPPerformerBox();
               case "pgap":  return new ApplePlayGapBox();
               case "pict":  return new ApplePreviewPictureBox();
               case "PICT":  return new PreviewPICTBox();
               case "pinf":  return new PurchaseInfoBox();
               case "pitm":  return new PrimaryItemBox();
               case "pixi":  return new PixelInformationProperty();
               case "pkin":  return new ViewPackingInformationBox();
               case "play":  return new AppleAutoPlayBox();
               case "plID":  return new PlIDBox();
               case "pm2t":  return new ProtectedMPEG2TransportStreamSampleEntry();
               case "pmax":  return new HintLargestPacket();
               case "pmcc":  return new GarminSettingsBox();
               case "png ": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("png "));break;
               case "pnot":  return new AppleImagePreviewBox();
               case "pose":  return new KodakPoseBox();
               case "prft":  return new ProducerReferenceTimeBox();
               case "prhd":  return new ProjectionHeader();
               case "prID":  return new ProductIDBox();
               case "prim":  return new ParametricImmersiveMediaProjectionBox();
               case "priv":  return new FairPlayPrivateKeyBox();
               case "prji":  return new ProjectionInformationBox();
               case "prof":  return new AppleProductionApertureDimensionsBox();
               case "proj":  return new ProjectionBox();
               case "prrt":  return new ARDroneTelemetryBox();
               case "pssh":  return new ProtectionSystemSpecificHeaderBox();
               case "ptch":  return new PitchBox();
               case "ptv ":  return new ApplePtvBox();
               case "purd":  return new PurchaseDateBox();
               case "purl":  return new PodcastUrlBox();
               case "PXMN":  return new MakerNotePentaxBox();
               case "PXTH":  return new PentaxPreviewBox();
               case "pymd":  return new ImagePyramidEntityGroupBox();
               case "Qclp": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("Qclp"));break;
               case "QDM2": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("QDM2"));break;
               case "QDMC": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("QDMC"));break;
               case "qhvc": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("qhvc"));break;
               case "qlif":  return new SVCPriorityLayerInfoBox();
               case "qtvr":  return new AppleQTVRTrackBox();
               case "QVMI":  return new CasioQVMIBox();
               case "rads":  return new RadsBox();
               case "rate":  return new RatingPercentBox();
               case "rati":  return new AppleRating2Box();
               case "raw ": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("raw "));break;
               case "rcif":  return new AppleOrientationBox();
               case "rdim":  return new CameraSystemLensReferenceDimensionsBox();
               case "rdrf":  return new AppleDataReferenceBox();
               case "RDTA":  return new RicohRDTABox();
               case "RDTB":  return new RicohRDTBBox();
               case "RDTC":  return new RicohRDTCBox();
               case "RDTG":  return new RicohRDTGBox();
               case "RDTL":  return new RicohRDTLBox();
               case "rect":  return new RectilinearProjectionBox();
               case "reel":  return new ReelNameBox();
               case "resa": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("resa"));break;
               case "resv": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("resv"));break;
               case "RICO":  return new RicohRICOBox();
               case "righ":  return new RightsBox();
               case "rinf":  return new RestrictedSchemeInfoBox();
               case "rldt":  return new ReleaseDateBox();
               case "rle ": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("rle "));break;
               case "rloc":  return new RelativeLocationProperty();
               case "rm2t":  return new MPEG2TSReceptionSampleEntry();
               case "rmcd":  return new AppleComponentDetectBox();
               case "rmcs":  return new AppleCpuSpeedBox();
               case "rmda":  return new AppleReferenceMovieDescriptorBox();
               case "rmdr":  return new AppleDataRateBox();
               case "RMKN":  return new RicohRMKNBox();
               case "rmla":  return new ReferenceMovieLanguageBox();
               case "rmqu":  return new AppleQualityBox();
               case "rmra":  return new AppleReferenceMovieBox();
               case "rmvc":  return new AppleVersionCheckBox();
               case "rndu":  return new RnduBox();
               case "rpdu":  return new RpduBox();
               case "rpza": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("rpza"));break;
               case "rref":  return new RequiredReferenceTypesProperty();
               case "rrgn":  return new RectRegionBox();
               case "rrtp":  return new ReceivedRtpHintSampleEntry();
               case "rsrc":  return new AppleDataReferenceResourceBox();
               case "rsrp":  return new ReceivedSrtpHintSampleEntry();
               case "rssr":  return new ReceivedSsrcBox();
               case "RTHU":  return new RTHUPreviewImageBox();
               case "rtng":  return new AppleRatingBox();
               case "rtp ": return new RtpMovieHintInformation(); // TODO: box is ambiguous in between RtpMovieHintInformation and RtpHintSampleEntry
               case "s263": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("s263"));break;
               case "SA3D":  return new SpatialAudioBox();
               case "saio":  return new SampleAuxiliaryInformationOffsetsBox();
               case "saiz":  return new SampleAuxiliaryInformationSizesBox();
               case "samr": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("samr"));break;
               case "sawb": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("sawb"));break;
               case "sbgp":  return new SampleToGroupBox();
               case "sbtt":  return new TextSubtitleSampleEntry();
               case "scen":  return new SceneBox();
               case "schi":  return new SchemeInformationBox();
               case "schm":  return new SchemeTypeBox();
               case "scpt":  return new TranscriptBox();
               case "scra":  return new KodakPreviewImageBox();
               case "scrb":  return new ScrambleSchemeInfoBox();
               case "scrn":  return new OlympusPreviewBox();
               case "sdep":  return new SampleDependencyBox();
               case "sdes":  return new AppleShortDescriptionBox();
               case "SDLN":  return new PlayModeBox();
               case "sdp ":  return new RtpTrackSdpHintInformation();
               case "sdpd":  return new AppleSdpdBox();
               case "sdpi":  return new AppleSdpiBox();
               case "sdtp":  return new SampleDependencyTypeBox();
               case "SEAL":  return new SEALBox();
               case "sefd":  return new SamsungTrailerBox();
               case "segr":  return new FDSessionGroupBox();
               case "seib":  return new ScalabilityInformationSEIBox();
               case "seig":  return new SeigBox();
               case "seii":  return new SeiInformationBox();
               case "SelO":  return new AppleSelectionOnlyBox();
               case "senc":  return new SampleEncryptionBox();
               case "setu":  return new MetaDataSetupBox();
               case "sevc": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("sevc"));break;
               case "sfID":  return new ITunesCountryCodeBox();
               case "sgpd":  return new SampleGroupDescriptionBox();
               case "shot":  return new ShotNameBox();
               case "shwm":  return new ShowMovementBox();
               case "sidx": return new SegmentIndexBox(); // TODO: box is ambiguous in between SegmentIndexBox and CompressedSegmentIndexBox
               case "SIGM":  return new SigmaEXIFBox();
               case "sinf":  return new ProtectionSchemeInfoBox();
               case "skip":  return new FreeSpaceBoxskipDup(); // TODO: fix duplicate
               case "slno":  return new SerialNumberBox();
               case "sm2t":  return new MPEG2TSServerSampleEntry();
               case "smc ": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("smc "));break;
               case "SmDm":  return new SMPTE2086MasteringDisplayMetadataBox();
               case "smhd":  return new SoundMediaHeaderBox();
               case "SMI ":  return new SMIBox();
               case "smrd":  return new SmrdBox();
               case "smta":  return new SmtaBox();
               case "snal":  return new ItemListPreviewImageBox();
               case "snim":  return new DataEntrySeqNumImdaBox();
               case "snro":  return new SequenceOffset();
               case "SNum":  return new SerialNumberBoxSNumDup(); // TODO: fix duplicate
               case "snut":  return new SnutTrackGroupTypeBox();
               case "soaa":  return new AlbumArtistSortBox();
               case "soal":  return new AlbumSortBox();
               case "soar":  return new ArtistSortBox();
               case "soco":  return new ComposerSortBox();
               case "sonm":  return new TrackSortBox();
               case "sosn":  return new TVShowSortBox();
               case "sowt": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("sowt"));break;
               case "spid":  return new VvcSubpicIDProperty();
               case "splt":  return new SplitTransitionEffectProperty();
               case "spor":  return new VvcSubpicOrderProperty();
               case "sqcp": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("sqcp"));break;
               case "srat":  return new SamplingRateBox();
               case "srpp":  return new SRTPProcessBox();
               case "srtp":  return new SrtpHintSampleEntry();
               case "ssix":  return new CompressedSubsegmentIndexBox();
               case "ssld":  return new SuggestedTimeDisplayDurationProperty();
               case "ssmv": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("ssmv"));break;
               case "ssrc":  return new NonPrimarySourceBox();
               case "sstl":  return new SVCSubTrackLayerBox();
               case "st3d":  return new Stereoscopic3D();
               case "stbl":  return new SampleTableBox();
               case "stco":  return new ChunkOffsetBox();
               case "stdp":  return new DegradationPriorityBox();
               case "ster": if(parent == "grpl") return new StereoEntityGroupBox(); else return new StereoVideoGroupBox();
               case "sthd":  return new SubtitleMediaHeaderBox();
               case "stik":  return new AppleMediaTypeBox();
               case "stmg":  return new MVCSubTrackMultiviewGroupBox();
               case "stpe":  return new SuggestedTransitionPeriodProperty();
               case "stpp":  return new XMLSubtitleSampleEntry();
               case "stps":  return new ApplePartialSyncSamplesBox();
               case "strd":  return new SubTrackDefinitionBox();
               case "stri": if(parent == "eyes") return new StereoViewInformationBox(); else return new SubTrackInformationBox();
               case "strk":  return new SubTrackBox();
               case "stsc":  return new SampleToChunkBox();
               case "stsd":  return new SampleDescriptionBox();
               case "stsg":  return new SubTrackSampleGroupBox();
               case "stsh":  return new ShadowSyncSampleBox();
               case "stsl":  return new SampleScaleBox();
               case "stss":  return new SyncSampleBox();
               case "stsz":  return new SampleSizeBox();
               case "sttg":  return new CueSettingsBox();
               case "stti":  return new SubTrackTierBox();
               case "stts":  return new TimeToSampleBox();
               case "stvi":  return new StereoVideoBox();
               case "stxt":  return new SimpleTextSampleEntry();
               case "styp":  return new SegmentTypeBox();
               case "stz2":  return new CompactSampleSizeBox();
               case "subs":  return new SubSampleInformationBox();
               case "sv3d":  return new SphericalVideoBox();
               case "svc1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("svc1"));break;
               case "svc2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("svc2"));break;
               case "svcC":  return new SVCConfigurationBox();
               case "svcM":  return new SVCMetaDataSampleEntry();
               case "svcP":  return new SVCPriorityAssignmentBox();
               case "svdr":  return new SVCDependencyRangeBox();
               case "svhd":  return new SphericalVideoHeader();
               case "svip":  return new InitialParameterSetBox();
               case "svmC":  return new SVCMetadataSampleConfigBox();
               case "svpr":  return new PriorityRangeBox();
               case "SVQ1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("SVQ1"));break;
               case "SVQ3": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("SVQ3"));break;
               case "swtc":  return new MultiviewGroupRelationBox();
               case "swtk":  return new SwitchableTracksGroupBox();
               case "sync":  return new SynchronizedTrackBox();
               case "tags":  return new NeroMetadataTagsBox();
               case "TAGS":  return new TagsBox();
               case "taic":  return new TaicBox();
               case "tapt":  return new AppleTrackApertureBox();
               case "tcmi":  return new TimecodeMediaInfoBox();
               case "tenc":  return new TrackEncryptionBox();
               case "text": if(parent == "gmhd") return new TextGmhdMediaBox(); else if(parent == "stsd") return new TextMediaBox(); break;
               case "tfdt":  return new TrackFragmentBaseMediaDecodeTimeBox();
               case "tfhd":  return new TrackFragmentHeaderBox();
               case "tfra":  return new TrackFragmentRandomAccessBox();
               case "thm ":  return new ThumbnailImageBox();
               case "thma":  return new KodakThumbnailImageBox();
               case "thmb":  return new AppleThumbnailReferenceBox();
               case "thum":  return new ThumbnailImage2Box();
               case "tibr":  return new TierBitRateBox();
               case "tiff": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("tiff"));break;
               case "tilC":  return new TiledImageBox();
               case "tima":  return new KodakDurationBox();
               case "time":  return new TimeStampBox();
               case "tims":  return new TimeScaleEntry();
               case "tiri":  return new TierInfoBox();
               case "titl":  return new ThreeGPPTitleBox();
               case "tkhd":  return new TrackHeaderBox();
               case "tlou":  return new TrackLoudnessInfo();
               case "tmax":  return new HintMaxRelativeTime();
               case "tmcd":  return new TimeCodeTrackBox();
               case "tmin":  return new HintMinRelativeTime();
               case "tmpo":  return new AppleBeatsPerMinuteBox();
               case "tnal":  return new ThumbnailImageBoxtnalDup(); // TODO: fix duplicate
               case "tnam":  return new TrackNameBox();
               case "tols":  return new TargetOlsProperty();
               case "totl":  return new HintBytesSenttotlDup(); // TODO: fix duplicate
               case "tpay":  return new HintBytesSenttpayDup(); // TODO: fix duplicate
               case "tpyl":  return new HintBytesSenttpylDup(); // TODO: fix duplicate
               case "traf":  return new TrackFragmentBox();
               case "trak":  return new TrackBox();
               case "tran":  return new TranscodingInfoBox();
               case "tref":  return new TrackReferenceBox();
               case "trep":  return new TrackExtensionPropertiesBox();
               case "trex":  return new TrackExtendsBox();
               case "trgr":  return new TrackGroupBox();
               case "trik":  return new TrickPlayBox();
               case "trkn":  return new TrackNumberBox();
               case "trpy":  return new HintBytesSent();
               case "trun":  return new TrackRunBox();
               case "tsel":  return new TrackSelectionBox();
               case "tsro":  return new TimeOffset();
               case "tssy":  return new TimestampSynchrony();
               case "tstb":  return new TileSubTrackGroupBox();
               case "tsyn":  return new TimeSynchronizedCaptureEntityGroupBox();
               case "TTAD":  return new TomTomADBox();
               case "TTHL":  return new TomTomHLBox();
               case "TTID":  return new TomTomIDBox();
               case "TTMD":  return new TomTomMetaDataBox();
               case "TTVD":  return new TomTomVDBox();
               case "TTVI":  return new TomTomVIBox();
               case "ttyp":  return new TrackTypeBox();
               case "tven":  return new TVEpisodeIDBox();
               case "tves":  return new AppleTVEpisodeBox();
               case "tvnn":  return new TVNetworkNameBox();
               case "tvsh":  return new TVShowBox();
               case "tvsn":  return new AppleTVSeasonBox();
               case "twos": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("twos"));break;
               case "tx3g":  return new TextSampleEntrytx3gDup(); // TODO: fix duplicate
               case "txas":  return new TrackExcludeFromAutoselectionBox();
               case "txtC":  return new TextConfigBox();
               case "tyco":  return new TypeCombinationBox();
               case "udat":  return new GPSLogBox();
               case "udes":  return new UserDescriptionProperty();
               case "udta":  return new UserDataBox();
               case "ulaw": if(parent == "stsd")  return new AudioSampleEntry(IsoStream.FromFourCC("ulaw"));break;
               case "uncC":  return new UncompressedFrameConfigurationBox();
               case "uncv": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("uncv"));break;
               case "uqua":  return new CameraSystemUnitQuaternionTransformBox();
               case "urat":  return new UserRatingBox();
               case "uri ":  return new URIBox();
               case "uriI":  return new URIInitBox();
               case "urim":  return new URIMetaSampleEntry();
               case "url ":  return new DataEntryUrlBox();
               case "url\0":  return new Url0Box();
               case "urn ":  return new DataEntryUrnBox();
               case "user":  return new FairPlayUserIDBox();
               case "uuid": return new UserBox(uuid);
               case "uuid 22cc04c7d6d94e079d904eb6ecbaf3a3":  return new UuidCameraIntrinsicMatrixBox();
               case "uuid 4363e9145b7d4aab97aebea69803b434":  return new UuidCameraExtrinsicMatrixBox();
               case "uuid 50524f4621d24fcebb88695cfac9c740":  return new PspProfExtensionBox();
               case "uuid 55534d5421d24fcebb88695cfac9c740":  return new PspUsmtExtensionBox();
               case "uuid 5ca708fb328e4205a861650eca0a9596":  return new MicrosoftWindowsVersionBox();
               case "uuid 6d1d9b0542d544e680e2141daff757b2":  return new TfxdBox();
               case "uuid 8974dbce7be74c5184f97148f9882554":  return new PiffTrackEncryptionBox();
               case "uuid a2394f525a9b4f14a2446c427c648df4":  return new PiffSampleEncryptionBox();
               case "uuid be7acfcb97a942e89c71999491e3afac":  return new XMPCustomBox();
               case "uuid d08a4f1810f34a82b6c832d8aba183d3":  return new UuidBasedProtectionSystemSpecificHeaderBox();
               case "uuid d4807ef2ca3946958e5426cb9e46a79f":  return new TfrfBox();
               case "v210": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("v210"));break;
               case "v216": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("v216"));break;
               case "v308": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("v308"));break;
               case "v408": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("v408"));break;
               case "v410": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("v410"));break;
               case "vdep":  return new TrackReferenceTypeBoxvdepDup(); // TODO: fix duplicate
               case "ver ":  return new KodakVersionBox();
               case "VERS":  return new ProductVersionBox();
               case "vexu":  return new VideoExtendedUsageBox();
               case "vipr":  return new ViewPriorityBox();
               case "vlab":  return new WebVTTSourceLabelBox();
               case "vmhd":  return new VideoMediaHeaderBox();
               case "vndr":  return new VendorBox();
               case "vp08": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("vp08"));break;
               case "vp09": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("vp09"));break;
               case "vp10": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("vp10"));break;
               case "vpcC":  return new VPCodecConfigurationBox();
               case "vplx":  return new TrackReferenceTypeBoxvplxDup(); // TODO: fix duplicate
               case "VPRF":  return new PspVprfBox();
               case "vrot":  return new AccelerometerDataBox();
               case "vsib":  return new ViewScalabilityInformationSEIBox();
               case "vsid":  return new CueSourceIDBox();
               case "vtta":  return new VTTAdditionalBox();
               case "vttC":  return new WebVTTConfigurationBox();
               case "vtte":  return new VTTEmptyBox();
               case "vvc1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("vvc1"));break;
               case "vvcb":  return new EntityToGroupBoxvvcbDup(); // TODO: fix duplicate
               case "vvcC":  return new VvcConfigurationBox();
               case "vvcN": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("vvcN"));break;
               case "vvi1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("vvi1"));break;
               case "vvnC":  return new VvcNALUConfigBox();
               case "vvs1": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("vvs1"));break;
               case "vwdi":  return new MultiviewSceneInfoBox();
               case "vwid":  return new ViewIdentifierBox();
               case "wave":  return new AppleWaveBox();
               case "wfex":  return new MicrosoftWaveFormatExBox();
               case "wide":  return new FreeSpaceBoxwideDup(); // TODO: fix duplicate
               case "wipe":  return new WipeTransitionEffectProperty();
               case "WLOC":  return new AppleWindowLocationBox();
               case "wvtt":  return new WVTTSampleEntry();
               case "xid ":  return new AppleXidBox();
               case "xml ":  return new XMLBox();
               case "XMP_":  return new XMPBox();
               case "Xtra":  return new WindowsMediaXtraBox();
               case "yrrc":  return new ThreeGPPRecordingYearBox();
               case "yuv2": if(parent == "stsd")  return new VisualSampleEntry(IsoStream.FromFourCC("yuv2"));break;
               case "zoom":  return new ZoomTransitionEffectProperty();
            }

            if(parent == "ilst")
            {
                if (fourCC[0] == '\0') return new IlstKey(IsoStream.FromFourCC(fourCC));
            }
            else if(uuid != null)
            {
                Log.Debug($"Unknown 'uuid' box: '{fourCC}'");
                return new UserBox(uuid);
            }

            //throw new NotImplementedException(fourCC);
            Log.Debug($"Unknown box: '{fourCC}'");
            return new UnknownBox(IsoStream.FromFourCC(fourCC));
        }

        public static SampleGroupDescriptionEntry DefaultCreateEntry(string fourCC)
        {
            switch(fourCC)
            {
               case "aebr": return new AutoExposureBracketingEntry();
               case "afbr": return new FlashExposureBracketingEntry();
               case "alst": return new AlternativeStartupEntry();
               case "aud ": return new AUDSampleEntry();
               case "av1f": return new AV1ForwardKeyFrameSampleGroupEntry();
               case "av1M": return new AV1MetadataSampleGroupEntry();
               case "av1s": return new AV1SwitchFrameSampleGroupEntry();
               case "avll": return new AVCLayerEntry();
               case "avss": return new AVCSubSequenceEntry();
               case "casg": return new CleanApertureEntry();
               case "dcfi": return new DecodingCapabilityInformation();
               case "dobr": return new DepthOfFieldBracketingEntry();
               case "drap": return new VisualDRAPEntry();
               case "dtrt": return new DecodeRetimingEntry();
               case "eob ": return new EndOfBitstreamSampleEntry();
               case "eos ": return new EndOfSequenceSampleEntry();
               case "eqiv": return new VisualEquivalenceEntry();
               case "fobr": return new FocusBracketingEntry();
               case "lbli": return new LhvcExternalBaseLayerInfo();
               case "linf": return new LayerInfoGroupEntry();
               case "minp": return new VvcMixedNALUnitTypePicEntry();
               case "mvif": return new MultiviewGroupEntry();
               case "nalm": return new NALUMapEntry();
               case "oinf": return new OperatingPointsInformation();
               case "opth": return new OperatingPointDecodeTimeHint();
               case "pano": return new PanoramaEntry();
               case "pase": return new ParameterSetNALUEntry();
               case "pasr": return new PixelAspectRatioEntry();
               case "prol": return new AudioPreRollEntry();
               case "pss1": return new PSSampleGroupEntry();
               case "rap ": return new VisualRandomAccessEntry();
               case "rash": return new RateShareEntry();
               case "refs": return new DirectReferenceSamplesList();
               case "roll": return new AudioRollRecoveryEntry();
               case "rror": return new VvcRectRegionOrderEntry();
               case "sap ": return new SAPEntry();
               case "scif": return new ScalableGroupEntry();
               case "scnm": return new ScalableNALUMapEntry();
               case "spid": return new VvcSubpicIDEntry();
               case "spli": return new SubpicLevelInfoEntry();
               case "spor": return new VvcSubpicOrderEntry();
               case "stmi": return new SampleToMetadataItemEntry();
               case "stsa": return new StepwiseTemporalLayerEntry();
               case "sulm": return new VvcSubpicLayoutMapEntry();
               case "sync": return new SyncSampleEntry();
               case "tele": return new TemporalLevelEntry();
               case "trif": return new RectangularRegionGroupEntry();
               case "tsas": return new TemporalSubLayerEntry();
               case "tscl": return new TemporalLayerEntry();
               case "vipr": return new ViewPriorityEntry();
               case "vopi": return new VvcOperatingPointsInformation();
               case "wbbr": return new WhiteBalanceBracketingEntry();
            }

            //throw new NotImplementedException(fourCC);
            Log.Debug($"Unknown entry: '{fourCC}'");
            return new UnknownEntry(IsoStream.FromFourCC(fourCC));
        }

        public static Descriptor DefaultCreateDescriptor(byte tag)
        {
            switch (tag)
            {
               case DescriptorTags.DecoderConfigDescrTag: return new DecoderConfigDescriptor();
               case DescriptorTags.DecSpecificInfoTag: return new GenericDecoderSpecificInfo(); // TODO: choose the specific descriptor
               case DescriptorTags.ES_DescrTag: return new ES_Descriptor();
               case DescriptorTags.IPI_DescrPointerTag: return new IPI_DescrPointer();
               case DescriptorTags.IPMP_DescrPointerTag: return new IPMP_DescriptorPointer();
               case DescriptorTags.IPMP_DescrTag: return new IPMP_Descriptor();
               case DescriptorTags.LanguageDescrTag: return new LanguageDescriptor();
               case DescriptorTags.MP4_IOD_Tag: return new IOD_Descriptor();
               case DescriptorTags.ProfileLevelIndicationIndexDescrTag: return new ProfileLevelIndicationIndexDescriptor();
               case DescriptorTags.QoS_DescrTag: return new QoS_Descriptor();
               case DescriptorTags.RegistrationDescrTag: return new RegistrationDescriptor();
               case DescriptorTags.SLConfigDescrTag: return new SLConfigDescriptor();
          }

            //throw new NotImplementedException($"Unknown descriptor: 'tag'");
            Log.Debug($"Unknown descriptor: '{tag}'");
            return new UnknownDescriptor(tag);
        }

    }
}
