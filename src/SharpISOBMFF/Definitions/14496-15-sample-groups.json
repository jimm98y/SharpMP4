{
  "name": "Sample Groups",
  "description": "Sample group types",
  "entries": [
    {
      "fourcc": "aud ",
      "description": "Access unit delimiter",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class AUDSampleEntry() extends VisualSampleGroupEntry ('aud ')\r\n{\r\n\tbit(24) audNalUnit;\r\n}"
    },
    {
      "fourcc": "avll",
      "description": "AVC layer description group",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class AVCLayerEntry() extends VisualSampleGroupEntry ('avll')\r\n{\r\n\tunsigned int(8)  layerNumber;\r\n\tunsigned int(7)  reserved = 0;\r\n\tunsigned int(1)  accurateStatisticsFlag;\r\n\tunsigned int(16) avgBitRate;\r\n\tunsigned int(16) avgFrameRate;\r\n}"
    },
    {
      "fourcc": "avss",
      "description": "AVC Sub-sequence group",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class AVCSubSequenceEntry () extends VisualSampleGroupEntry ('avss')\r\n{\r\n\t\tunsigned int(16) subSequenceIdentifer;\r\n\t\tunsigned int(8)  layerNumber; \r\n\t\tunsigned int(1)  durationFlag;\r\n\t\tunsigned int(1)  avgRateFlag;\r\n\t\tunsigned int(6)  reserved = 0; \r\n\t\tif (durationFlag)\r\n\t\t\tunsigned int(32) duration;\r\n\t\tif (avgRateFlag)\r\n\t\t{\r\n\t\t\tunsigned int(7)  reserved = 0;\r\n\t\t\tunsigned int(1)  accurateStatisticsFlag;\r\n\t\t\tunsigned int(16) avgBitRate;\r\n\t\t\tunsigned int(16) avgFrameRate;\r\n\t\t}\r\n\t\tunsigned int(8) numReferences;\r\n\t\tDependencyInfo dependency[numReferences];\r\n\t}\r\n}"
    },
    {
      "fourcc": "dcfi",
      "description": "VVC decoding capability information",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class DecodingCapabilityInformation extends VisualSampleGroupEntry ('dcfi') {\r\n\tunsigned int(16) dci_nal_unit_length;\r\n\tbit(8*dci_nal_unit_length) dci_nal_unit;\r\n}"
    },
    {
      "fourcc": "dtrt",
      "description": "SVC decode re-timing",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class DecodeRetimingEntry() extends VisualSampleGroupEntry ('dtrt') { \r\n\tunsigned int(8) tierCount;\r\n\tfor (i=1; i<=tierCount; i++) {\r\n\t\tunsigned int(16) tierID;\r\n\t\tsigned int(16) delta;\r\n\t}\r\n}"
    },
    {
      "fourcc": "eob ",
      "description": "End of bitstream",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class EndOfBitstreamSampleEntry() extends VisualSampleGroupEntry ('eob ')\r\n{\r\n\tbit(16) eobNalUnit;\r\n}"
    },
    {
      "fourcc": "eos ",
      "description": "End of sequence",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class EndOfSequenceSampleEntry() extends VisualSampleGroupEntry ('eos ')\r\n{\r\n\tunsigned int(8) num_eos_nal_unit_minus1;\r\n\tfor (i=0; i <= num_eos_nal_unit_minus1; i++)\r\n\t\tbit(16) eosNalUnit[i];\r\n}"
    },
    {
      "fourcc": "lbli",
      "description": "HEVC External base layer",
      "containers": [ "sgpd" ],
      "syntax": "aligned(8) class LhvcExternalBaseLayerInfo() extends VisualSampleGroupEntry('lbli')\r\n{\r\n\tbit(1) reserved = 1;\r\n\tunsigned int(1) bl_irap_pic_flag;\r\n\tunsigned int(6) bl_irap_nal_unit_type;\r\n\tsigned   int(8) sample_offset;\r\n}",
      "type": "VisualSampleGroupEntry"
    },
    {
      "fourcc": "linf",
      "description": "L-HEVC and VVC layer information",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class LayerInfoGroupEntry extends VisualSampleGroupEntry ('linf') {\r\n\tbit(2) reserved = 0;\r\n\tunsigned int(6) num_layers_in_track;\r\n\tfor (i=0; i<num_layers_in_track; i++) {\r\n\t\tbit(2) reserved = 0;\r\n\t\tunsigned int(1) irap_gdr_pics_in_layer_only_flag;\r\n\t\tunsigned int(1) completeness_flag;\r\n\t\tunsigned int(6) layer_id;\r\n\t\tunsigned int(3) min_TemporalId;\r\n\t\tunsigned int(3) max_TemporalId;\r\n\t\tbit(1) reserved = 0;\r\n\t\tunsigned int(7) sub_layer_presence_flags;\r\n\t}\r\n}"
    },
    {
      "fourcc": "minp",
      "description": "VVC mixed NAL unit type pictures",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class VvcMixedNALUnitTypePicEntry() extends VisualSampleGroupEntry('minp')\r\n{\r\n\tunsigned int(16) num_mix_nalu_pic_idx;\r\n\tfor (i = 0; i < num_mix_nalu_pic_idx; i++){\r\n\t\tunsigned int(16) mix_subp_track_idx1[i];\r\n\t\tunsigned int(16) mix_subp_track_idx2[i];\r\n\t}\r\n\tunsigned int(10) pps_mix_nalu_types_in_pic_bit_pos;\r\n\tunsigned int(6) pps_id;\r\n}"
    },
    {
      "fourcc": "mvif",
      "description": "MVC Scalability Information",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class MultiviewGroupEntry() extends VisualSampleGroupEntry ('mvif') { \r\n\tunsigned int(8) groupID;\r\n\tunsigned int(8) primary_groupID;\r\n\tbit(4) reserved = 0;\r\n\tunsigned int(1) is_tl_switching_point;\r\n\tbit(3) reserved = 0;\r\n\tunsigned int(8) tl_switching_distance;\r\n\t\r\n\tif (groupID == primary_groupID)\t// primary definition of tier\r\n\t{\r\n\t\tViewIdentifierBox();\t\t\t// Mandatory\r\n\t\tTierInfoBox(); \t\t\t\t// Mandatory\r\n\t\tTierDependencyBox(); \t\t// Mandatory\r\n\t\tPriorityRangeBox();\t\t\t// Mandatory\r\n\r\n\t\t//Optional Boxes or fields may follow when defined later\r\n\t\tTierBitRateBox();\t\t\t\t\t\t// optional\r\n\t\tBufferingBox();\t\t\t\t\t\t// optional\r\n\t\tInitialParameterSetBox();\t\t\t// optional\r\n\t\tProtectionSchemeInfoBox();\t\t\t// optional\r\n\t\tViewPriorityBox();\t\t\t\t\t// optional\r\n\t}\r\n}"
    },
    {
      "fourcc": "nalm",
      "description": "NAL unit map entry",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class NALUMapEntry() extends VisualSampleGroupEntry ('nalm') {\r\n\tbit(6) reserved = 0;\r\n\tunsigned int(1) large_size;\r\n\tunsigned int(1) rle;\r\n\tif (large_size) {\r\n\t\tunsigned int(16) entry_count;\r\n\t} else {\r\n\t\tunsigned int(8) entry_count;\r\n\t}\r\n\tfor (i=1; i<= entry_count; i++) {\r\n\t\tif (rle) {\r\n\t\t\tif (large_size) {\r\n\t\t\t\tunsigned int(16) NALU_start_number;\r\n\t\t\t} else {\r\n\t\t\t\tunsigned int(8) NALU_start_number;\r\n\t\t\t}\r\n\t\t}\r\n\t\tunsigned int(16) groupID;\r\n\t}\r\n}"
    },
    {
      "fourcc": "oinf",
      "description": "L-HEVC operating points information",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class OperatingPointsInformation extends VisualSampleGroupEntry ('oinf') {\r\n\tOperatingPointsRecord oinf;\r\n}"
    },
    {
      "fourcc": "opth",
      "description": "L-HEVC and VVC Operating Point Decode Time Hint",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class OperatingPointDecodeTimeHint()\r\nextends VisualSampleGroupEntry ('opth')\r\n{\r\n\tsigned int(32) delta_time;\r\n}\r\n"
    },
    {
      "fourcc": "pase",
      "description": "Parameter set",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class ParameterSetNALUEntry() extends VisualSampleGroupEntry ('pase')\r\n{\r\n\tunsigned int(16) ps_nalu_length;\r\n\tbit(8* ps_nalu_length) ps_nal_unit;\r\n}"
    },
    {
      "fourcc": "pss1",
      "description": "In-band parameter set indication",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class PSSampleGroupEntry() extends VisualSampleGroupEntry ('pss1')\r\n{\r\n\tunsigned int(1) sps_present;\r\n\tunsigned int(1) pps_present;\r\n\tunsigned int(1) aps_present;\r\n\tbit(5) reserved = 0;\r\n}"
    },
    {
      "fourcc": "rror",
      "description": "Rectangular region order",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class VvcRectRegionOrderEntry () extends VisualSampleGroupEntry('rror')\r\n{\r\n\tunsigned int(1) subpic_id_info_flag;\r\n\tbit(7) reserved = 0;\r\n\tunsigned int(16) num_alternate_region_set;\r\n\tfor (i = 0; i < num_alternate_region_set; i++) {\r\n\t\tunsigned int(16) num_regions_in_set[i];\r\n\t\tunsigned int(16) alternate_region_set_id[i];\r\n\t\tfor (j = 0; j < num_regions_in_set[i]; j++)\r\n\t\t\tunsigned int(16) groupID[i][j];\r\n\t}\r\n\tunsigned int(16) num_regions_minus1;\r\n\tfor (i = 0; i < num_regions_minus1; i++)\r\n\t\tunsigned int(16) region_id[i];\r\n\tif (subpic_id_info_flag)\r\n\t\tVVCSubpicIDRewritingInfomationStruct() subpic_id_rewriting_info;\r\n}"
    },
    {
      "fourcc": "scif",
      "description": "SVC Scalability Information",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class ScalableGroupEntry() extends VisualSampleGroupEntry ('scif') { \r\n\tunsigned int(8) groupID;\r\n\tunsigned int(8) primary_groupID;\r\n\tunsigned int(1) is_tier_IDR;\r\n\tunsigned int(1) noInterLayerPredFlag; \r\n\tunsigned int(1) useRefBasePicFlag;\r\n\tunsigned int(1) storeBaseRepFlag; \r\n\tunsigned int(1) is_tl_switching_point;\r\n\tbit(3) reserved = 0;\r\n\tunsigned int(8) tl_switching_distance;\r\n\t\r\n\tif (groupID == primary_groupID)\t// primary definition of tier\r\n\t{\r\n\t\tTierInfoBox(); \t\t\t\t// Mandatory\r\n\t\tSVCDependencyRangeBox();\t// Mandatory\r\n\t\tPriorityRangeBox();\t\t\t// Mandatory\r\n\r\n\t\t//Optional Boxes or fields may follow when defined later\r\n\t\tTierBitRateBox();\t\t\t\t\t\t// optional\r\n\t\tRectRegionBox();\t\t\t\t\t\t// optional\r\n\t\tBufferingBox();\t\t\t\t\t\t// optional\r\n\t\tTierDependencyBox(); \t\t\t\t// optional\r\n\t\tInitialParameterSetBox();\t\t\t// optional\r\n\t\tIroiInfoBox();\t\t\t\t\t\t\t// optional\r\n\t\tProtectionSchemeInfoBox();\t\t\t// optional\r\n\t\tTranscodingInfoBox();\t\t\t\t// optional\r\n\t}\r\n}"
    },
    {
      "fourcc": "scnm",
      "description": "AVC/SVC/MVC map groups",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class ScalableNALUMapEntry() extends VisualSampleGroupEntry ('scnm') { \r\n\tbit(8) reserved = 0;\r\n\tunsigned int(8) NALU_count;\r\n\tfor (i=1; i<= NALU_count; i++)\r\n\t\tunsigned int(8) groupID;\r\n\t}\r\n}"
    },
    {
      "fourcc": "spid",
      "description": "VVC subpicture ID",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class VvcSubpicIDEntry() extends VisualSampleGroupEntry('spid')\r\n{\r\n\tunsigned int(1) rect_region_flag;\r\n\tbit(2) reserved = 0;\r\n\tunsigned int(1) continuous_id_flag;\r\n\tunsigned int(12) num_subpics_minus1;\r\n\tfor (i = 0; i <= num_subpics_minus1; i++) {\r\n\t\tif ((continuous_id_flag && i == 0) || !continuous_id_flag)\r\n\t\t\tunsigned int(16) subpic_id[i];\r\n\t\tif (rect_region_flag)\r\n\t\t\tunsigned int(16) groupID[i];\r\n\t}\r\n}"
    },
    {
      "fourcc": "spli",
      "description": "VVC subpicture level information",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class SubpicLevelInfoEntry() extends VisualSampleGroupEntry('spli')\r\n{\r\n\tunsigned int(8) level_idc;\r\n}"
    },
    {
      "fourcc": "spor",
      "description": "VVC subpicture order",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "aligned(8) class VvcSubpicOrderEntry() extends VisualSampleGroupEntry('spor')\r\n{\r\n\tunsigned int(1) subpic_id_info_flag;\r\n\tunsigned int(15) num_subpic_ref_idx;\r\n\tfor (i = 0; i < num_subpic_ref_idx; i++)\r\n\t\tunsigned int(16) subp_track_ref_idx[i];\r\n\tif (subpic_id_info_flag)\r\n\t\tVVCSubpicIDRewritingInfomationStruct() subpic_id_rewriting_info;\r\n}"
    },
    {
      "fourcc": "stsa",
      "description": "Step-wise Temporal Layer",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class StepwiseTemporalLayerEntry() extends VisualSampleGroupEntry ('stsa')\r\n{\r\n}"
    },
    {
      "fourcc": "sulm",
      "description": "VVC subpicture layout",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class VvcSubpicLayoutMapEntry() extends VisualSampleGroupEntry ('sulm') {\r\n\tunsigned int(32) groupID_info_4cc;\r\n\tunsigned int(16) entry_count_minus1;\r\n\tfor(i=0; i <= entry_count_minus1; i++)\r\n\t\tunsigned int(16) groupID;\r\n}"
    },
    {
      "fourcc": "sync",
      "description": "Sync sample groups",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class SyncSampleEntry() extends VisualSampleGroupEntry ('sync')\r\n{\r\n\t\tbit(2) reserved = 0;\r\n\t\tunsigned int(6) NAL_unit_type;\r\n}"
    },
    {
      "fourcc": "trif",
      "description": "HEVC Tile Region",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class RectangularRegionGroupEntry() extends VisualSampleGroupEntry ('trif')\r\n{\r\n\tunsigned int(16) groupID;\r\n\tunsigned int(1) rect_region_flag;\r\n\tif (!rect_region_flag)\r\n\t\tbit(7)  reserved = 0;\r\n\telse {\r\n\t\tunsigned int(2) independent_idc;\r\n\t\tunsigned int(1) full_picture;\r\n\t\tunsigned int(1) filtering_disabled;\r\n\t\tunsigned int(1) has_dependency_list;\r\n\t\tbit(2)  reserved = 0;\r\n\t\tif (!full_picture) {\r\n\t\t\tunsigned int(16) horizontal_offset;\r\n\t\t\tunsigned int(16) vertical_offset;\r\n\t\t}\r\n\t\tunsigned int(16) region_width;\r\n\t\tunsigned int(16) region_height;\r\n\t\tif (has_dependency_list) {\r\n\t\t\tunsigned int(16) dependency_rect_region_count;\r\n\t\t\tfor (i=1; i<= dependency_rect_region_count; i++)\r\n\t\t\t\tunsigned int(16) dependencyRectRegionGroupID;\r\n\t}\r\n}\r\n}"
    },
    {
      "fourcc": "tsas",
      "description": "Temporal Sub-Layer",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class TemporalSubLayerEntry() extends VisualSampleGroupEntry ('tsas')\r\n{\r\n}"
    },
    {
      "fourcc": "tscl",
      "description": "Temporal Layer",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class TemporalLayerEntry() extends VisualSampleGroupEntry ('tscl')\r\n{\r\n\tunsigned int(8)  temporalLayerId;\r\n\tunsigned int(2)  tlprofile_space;\r\n\tunsigned int(1)  tltier_flag;\r\n\tunsigned int(5)  tlprofile_idc;\r\n\tunsigned int(32) tlprofile_compatibility_flags;\r\n\tunsigned int(48) tlconstraint_indicator_flags;\r\n\tunsigned int(8)  tllevel_idc;\r\n\tunsigned int(16) tlMaxBitRate;\r\n\tunsigned int(16) tlAvgBitRate;\r\n\tunsigned int(8)  tlConstantFrameRate;\r\n\tunsigned int(16) tlAvgFrameRate;\r\n}"
    },
    {
      "fourcc": "vipr",
      "description": "View priority",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class ViewPriorityEntry() extends VisualSampleGroupEntry ('vipr')\r\n{\r\n\tViewPriorityBox();\r\n}"
    },
    {
      "fourcc": "vopi",
      "description": "VVC operating points information",
      "containers": [ "sgpd" ],
      "type": "VisualSampleGroupEntry",
      "syntax": "class VvcOperatingPointsInformation extends VisualSampleGroupEntry ('vopi') {\r\n\tVvcOperatingPointsRecord oinf;\r\n}"
    }
  ]
}